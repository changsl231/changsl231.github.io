<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>图像去噪</title>
      <link href="/2020/10/20/%E5%9B%BE%E5%83%8F%E5%8E%BB%E5%99%AA/"/>
      <url>/2020/10/20/%E5%9B%BE%E5%83%8F%E5%8E%BB%E5%99%AA/</url>
      
        <content type="html"><![CDATA[<h1 id="图像去噪"><a href="#图像去噪" class="headerlink" title="图像去噪"></a>图像去噪</h1><h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h2><p>目前有一张小动物眼球光学断层相干扫描（Optical coherence tomography，OCT）照片，但是由于小鼠呼吸，造成图像中产生了蓝色伪影和水平条纹，现需要将在将蓝色伪影和横条纹去掉的情况下，对比度再高一点。</p><p><img src="https://changsl231-pics.oss-cn-beijing.aliyuncs.com/img/20201020091009.png#pic_center" alt="原始图像"></p><center> <font size = 3>图1. 原始图像</font></center><a id="more"></a><h2 id="2-去除横纹"><a href="#2-去除横纹" class="headerlink" title="2. 去除横纹"></a>2. 去除横纹</h2><h3 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h3>]]></content>
      
      
      <categories>
          
          <category> CV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu jupyternotebook添加keanel被拒绝</title>
      <link href="/2020/07/29/jupyternotebook%E6%B7%BB%E5%8A%A0keanel%E8%A2%AB%E6%8B%92%E7%BB%9D/"/>
      <url>/2020/07/29/jupyternotebook%E6%B7%BB%E5%8A%A0keanel%E8%A2%AB%E6%8B%92%E7%BB%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="Errno-13-Permission-denied-’-usr-local-share-jupyter’"><a href="#Errno-13-Permission-denied-’-usr-local-share-jupyter’" class="headerlink" title="[Errno 13] Permission denied:’/usr/local/share/jupyter’"></a>[Errno 13] Permission denied:’/usr/local/share/jupyter’</h1><h2 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1.问题描述"></a>1.问题描述</h2><p>当我们使用conda创建虚拟环境后，keanel不会自动添加到jupyter notebook的keanel列表当中，这时候就需要我们通过命令手动添加，Windows下的操作命令如下：</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda activate mmd2 <span class="comment"># 激活环境</span></span><br><span class="line">conda install ipykernel <span class="comment"># 安装必要插件</span></span><br><span class="line">python -m ipykernel install --name mmd2</span><br></pre></td></tr></table></figure><p>但是相同的情况在Ubuntu环境下使用的话，会出现 <code>[Errno 13] Permission denied:&#39;/usr/local/share/jupyter</code>的错误，如图一所示：</p><p><img src="https://img-blog.csdnimg.cn/20200729091057104.png#pic_center" alt=""></p><center><font size = 3>图1 问题图片</font></center>## 2.问题解决在安装命令里添加`--usr`即可解决，命令如下：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m ipykernel install --usr --name mmd2</span><br></pre></td></tr></table></figure>结果图如下所示：<p><img src="https://img-blog.csdnimg.cn/2020072909115154.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> jupyternotebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改json内容</title>
      <link href="/2020/07/28/json%E4%BF%AE%E6%94%B9%E5%86%85%E5%AE%B9/"/>
      <url>/2020/07/28/json%E4%BF%AE%E6%94%B9%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="修改json内容"><a href="#修改json内容" class="headerlink" title="修改json内容"></a>修改json内容</h1><h2 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1. 问题描述"></a>1. 问题描述</h2><p>当时用labelme标注图片后，又对文件进行了重命名，发现<code>imagePath</code>和重命名的文件名不一致，这样在制作coco数据集时会出现报错的情况，因此需要对<code>imagePath</code>也进行更新。</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20200728220942334.png#pic_center" alt=""></p><center> <font size = 3>图1. 问题图片.png</font></center><h2 id="2-程序操作"><a href="#2-程序操作" class="headerlink" title="2.程序操作"></a>2.程序操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入程序包</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment">#定位json所在的文件夹</span></span><br><span class="line">file_json=<span class="string">'D:\\LocalGithub\\mmdetection2.0\\data\\dataB\\coco\\test2014'</span> </span><br><span class="line"><span class="comment">#定义操作函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_json</span><span class="params">(path)</span>:</span></span><br><span class="line">    files=os.listdir(path)</span><br><span class="line">    <span class="comment">#os.listdir() 方法用于返回指定的文件夹包含的文件或文件夹的名字的列表</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files: </span><br><span class="line">        dir=os.path.join(path,file)</span><br><span class="line">        <span class="comment"># os.path.join()，将join()里面得参数拼接成一个完整得路径。</span></span><br><span class="line">        <span class="comment"># 检查是否为文件夹，如果是，则递归</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(dir):</span><br><span class="line">            chang_json(dir)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        file_split=file.split(<span class="string">'.'</span>)</span><br><span class="line">        <span class="comment">#file.split将file列表数据以"."分割，并赋值给file_split</span></span><br><span class="line">        <span class="keyword">if</span> file_split[<span class="number">-1</span>] == <span class="string">"json"</span>:</span><br><span class="line">            str=<span class="string">""</span>.join(file_split[<span class="number">0</span>])+<span class="string">".jpg"</span> <span class="comment"># 定义要更改的文件名</span></span><br><span class="line">            <span class="keyword">with</span> open(path+<span class="string">'\\'</span>+file,<span class="string">'rb'</span>) <span class="keyword">as</span> load_f: </span><br><span class="line">            <span class="comment">#定义为只读模式，并定义名称为f</span></span><br><span class="line">                params = json.load(load_f)</span><br><span class="line">                <span class="comment">#加载json文件中的内容给params</span></span><br><span class="line">                load_f.close() <span class="comment"># 关闭文件</span></span><br><span class="line">            <span class="keyword">with</span> open(path+<span class="string">'\\'</span>+file,<span class="string">'w'</span>) <span class="keyword">as</span> dump_f:</span><br><span class="line">            <span class="comment">#定义为写入模式，并定义名称为f</span></span><br><span class="line">                print(str) <span class="comment"># 查看要写入的名称</span></span><br><span class="line">                params[<span class="string">'imagePath'</span>] = str <span class="comment"># 更改参数</span></span><br><span class="line">                json.dump(params,dump_f) <span class="comment"># 将params写入文件</span></span><br><span class="line">                dump_f.close() <span class="comment">#关闭文件</span></span><br></pre></td></tr></table></figure><blockquote><p>到此文件就更新完成了，只不过原先json文件里有换行符，更新后没有了影响观看，但是不影响正常使用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> json </tag>
            
            <tag> io </tag>
            
            <tag> labelme </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
